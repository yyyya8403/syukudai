<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>管理画面 - 宿題管理</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
        }
        header {
            background-color: #333;
            color: white;
            padding: 1rem;
            text-align: center;
        }
        main {
            margin: 2rem auto;
            width: 90%;
            max-width: 600px;
        }
        .input-area, .submitted-assignments {
            background-color: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }
        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: bold;
        }
        input[type="text"], input[type="date"], button {
            width: 100%;
            padding: 0.75rem;
            margin-bottom: 1rem;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
        button {
            background-color: #4CAF50;
            color: white;
            cursor: pointer;
            border: none;
        }
        .submitted-assignments ul {
            list-style-type: none;
            padding: 0;
        }
        .submitted-assignments li {
            margin-bottom: 0.5rem;
        }
    </style>
</head>
<body>

<header>
    <h1>宿題管理 - 管理画面</h1>
</header>

<main>
    <div class="input-area">
        <h2>新しい宿題を追加</h2>
        <form id="assignmentForm">
            <label for="assignmentName">宿題の内容:</label>
            <input type="text" id="assignmentName" required>
            <label for="dueDate">期限:</label>
            <input type="date" id="dueDate" required>
            <button type="submit">宿題を追加</button>
        </form>
    </div>

    <div class="submitted-assignments">
        <h2>提出された宿題</h2>
        <ul id="submittedList"></ul>
    </div>
</main>

<script>
    // Cookieからデータを取得する関数
    function getCookie(name) {
        let cookies = document.cookie.split(';');
        for (let cookie of cookies) {
            let [key, value] = cookie.trim().split('=');
            if (key === name) {
                return decodeURIComponent(value);
            }
        }
        return null;
    }

    // クッキーを設定する関数
function setCookie(name, value, days) {
    let expires = "";
    if (days) {
        let date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + ";" + expires + ";path=/";
}

// クッキーを取得する関数
function getCookie(name) {
    let nameEQ = name + "=";
    let ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}

// クッキーを消す関数
function eraseCookie(name) {
    document.cookie = name + '=; Max-Age=-99999999;';
}

    // 宿題データを保持する配列
    let assignments = getCookie('assignments') ? JSON.parse(getCookie('assignments')) : [];

    // 宿題を追加
    const assignmentForm = document.getElementById('assignmentForm');
    assignmentForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const name = document.getElementById('assignmentName').value;
        const dueDate = document.getElementById('dueDate').value;
        assignments.push({ name, dueDate });
        setCookie('assignments', JSON.stringify(assignments), 30); // 30日間保存
        assignmentForm.reset();
        alert('宿題を追加しました');
        location.reload(); // ページ再読み込み
    });

    // 提出された宿題の表示
    const submittedList = document.getElementById('submittedList');
    const submittedAssignments = getCookie('submitted') ? JSON.parse(getCookie('submitted')) : [];
    submittedAssignments.forEach(submission => {
        const li = document.createElement('li');
        li.textContent = `ユーザー番号 ${submission.userNumber} が "${submission.assignment}" を提出しました。`;
        submittedList.appendChild(li);
    });
</script>

</body>
</html>
